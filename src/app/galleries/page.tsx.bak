import { fetchRecords } from '@/lib/airtable.utils';
import { Gallery } from '@/lib/airtable.types';
import { TABLES } from '@/lib/airtable.config';
import GalleryList from '@/components/galleries/GalleryList';
import FilterSort from '@/components/common/FilterSort';
import Pagination from '@/components/common/Pagination';

export default async function GalleriesPage({ searchParams }: { searchParams: { [key: string]: string | string[] | undefined } }) {
  const page = parseInt(Array.isArray(searchParams.page) ? searchParams.page[0] : searchParams.page || '1');
  const pageSize = parseInt(Array.isArray(searchParams.pageSize) ? searchParams.pageSize[0] : searchParams.pageSize || '10');
  const filterBy = Array.isArray(searchParams.filterBy) ? searchParams.filterBy[0] : searchParams.filterBy;
  const filterValue = Array.isArray(searchParams.filterValue) ? searchParams.filterValue[0] : searchParams.filterValue;
  const sortBy = Array.isArray(searchParams.sortBy) ? searchParams.sortBy[0] : searchParams.sortBy;
  const sortDirection = (Array.isArray(searchParams.sortDirection) ? searchParams.sortDirection[0] : searchParams.sortDirection || 'asc') as 'asc' | 'desc';

  const { records: galleries, totalCount } = await fetchRecords<Gallery>(TABLES.GALLERIES, {
    filterBy,
    filterValue,
    sortBy,
    sortDirection,
    page,
    pageSize,
  });

  const totalPages = Math.ceil(totalCount / pageSize);

  const filterFields = [
    { value: 'name', label: 'Name' },
  ];

  const sortFields = [
    { value: 'name', label: 'Name' },
    { value: 'createdTime', label: 'Created Date' },
  ];

  return (
    <div className="container mx-auto py-8">
      <h1 className="text-3xl font-bold mb-6">Galleries</h1>
      <FilterSort filterFields={filterFields} sortFields={sortFields} />
      <GalleryList galleries={galleries} />
      <Pagination currentPage={page} totalPages={totalPages} pageSize={pageSize} />
    </div>
  );
} 